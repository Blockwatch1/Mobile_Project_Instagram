// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  bio        String?
  username   String    @unique
  password   String
  lastLogin  DateTime?
  pfpPath    String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  followedBy User[]    @relation("UserFollows")
  following  User[]    @relation("UserFollows")
  posts      Post[]
  savedPosts Post[]    @relation("SavedPosts")
}

model Post {
  postId      Int      @id @default(autoincrement())
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isThread    Boolean? @default(false)
  user        User?    @relation(fields: [userId], references: [userId])
  userId      Int?

  savedPosts User[] @relation("SavedPosts")
}

model Comment {
  commentId Int       @id @default(autoincrement())
  content   String
  isReply   Boolean   @default(false)
  createdAt DateTime  @default(now())
  replyId   Int?
  reply     Comment?  @relation("CommentReplies", fields: [replyId], references: [commentId])
  replies   Comment[] @relation("CommentReplies")
}
